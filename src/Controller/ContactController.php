<?php

namespace App\Controller;

use Helper\MailHelper;
use Twig\Error\LoaderError;
use Twig\Error\SyntaxError;
use Twig\Error\RuntimeError;
use PHPMailer\PHPMailer\SMTP;

use App\Controller\Controller;
use PHPMailer\PHPMailer\Exception;
use PHPMailer\PHPMailer\PHPMailer;
use App\Model\Factory\ModelFactory;
use Dotenv\Result\Success;

/**
 * Class ContactController
 * @package App\Controller
 */
class ContactController extends Controller
{
    /**
    * @return string
    * @throws LoaderError
    * @throws RuntimeError
    * @throws SyntaxError
    */
    public function contactMethod()
    {
        if (!empty($this->post)) {
            $mail = new PHPMailer(true);
            $mailHelper= new MailHelper();


            $mail->isSMTP();
            $mail->Host = getenv('MAIL_HOST');
            $mail->SMTPAuth = getenv('MAIL_SMTP_AUTH');
            $mail->Username = getenv('MAIL_USERNAME'); //paste one generated by Mailtrap
            $mail->Password = getenv('MAIL_PASSWORD'); //paste one generated by Mailtrap
            $mail->SMTPSecure = getenv('MAIL_ENCRYPTION');
            $mail->Port = getenv('MAIL_PORT');
            

            $mail->setFrom($this->post['email'], $this->post['first-name']);
            $mail->addAddress('contact@michel.com', 'Michel');

            $mail->Subject = 'Test Email via Mailtrap SMTP using PHPMailer';
            $mail->isHTML(true);

            $mail->Body = $mailHelper->htmlMail($this->post['message']);

            if ($mail->send()) {
                $this->cookie->createAlert('Votre message nous a Ã©tÃ© envoyer avec success, Merci ğŸ˜‰');
                $this->redirect('contact!contact');
            } 
            $this->cookie->createAlert('Il y\'a une erreur ğŸ˜¥ ');

            $this->redirect('contact!contact');
        }
        return $this->render('contact/create.twig');
    }

}